// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: question.sql

package sqlc

import (
	"context"
	"encoding/json"
)

const getQuestions = `-- name: GetQuestions :many

SELECT q.id, q.title, q.answer FROM question q ORDER BY q.id
`

type GetQuestionsRow struct {
	ID     int32           `json:"id"`
	Title  string          `json:"title"`
	Answer json.RawMessage `json:"answer"`
}

func (q *Queries) GetQuestions(ctx context.Context) ([]GetQuestionsRow, error) {
	rows, err := q.db.QueryContext(ctx, getQuestions)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetQuestionsRow
	for rows.Next() {
		var i GetQuestionsRow
		if err := rows.Scan(&i.ID, &i.Title, &i.Answer); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
